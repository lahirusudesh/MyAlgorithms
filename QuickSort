// Java program for implementation of QuickSort 
class QuickSort 
{ 
	int partition(int arr[], int low, int high) 
	{ 
		int i = low;
		int j = high -1;
		int pivot = arr[high]; 
		while(i<=j){
			while(pivot > arr[i]){
				i++;
			}
			while(pivot < arr[j]){
				j--;
			}
			if(i<=j){
				int temp = arr[i]; 
				arr[i] = arr[j]; 
				arr[j] = temp;
				i++;
				j--;
			}
		}
		int temp = arr[i]; 
		arr[i] = arr[high]; 
		arr[high] = temp; 

		return i; 
	} 


	void sort(int arr[], int low, int high) 
	{ 
		if(low<high){
		int pi = partition(arr, low, high); 
		sort(arr, low, pi-1); 
		sort(arr, pi+1, high); 
		}
	} 

	/* A utility function to print array of size n */
	static void printArray(int arr[]) 
	{ 
		int n = arr.length; 
		for (int i=0; i<n; ++i) 
			System.out.print(arr[i]+" "); 
		System.out.println(); 
	} 

	// Driver program 
	public static void main(String args[]) 
	{ 
		int arr[] = {1,2,3,4,5,6,7,8,9}; 
		int n = arr.length; 

		QuickSort ob = new QuickSort(); 
		ob.sort(arr, 0, n-1); 

		System.out.println("sorted array"); 
		printArray(arr); 
	} 
} 

